#include<windows.h>

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM IParam);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevlnstance, LPSTR lpCmdLine, int nCmdShow)
{
	LPWSTR szClassName = L"MyClass";
	LPWSTR szTitleName = L"MyWindow";

	WNDCLASSEX wndclass;
	wndclass.cbSize = sizeof(wndclass);
	wndclass.lpszClassName = szClassName;
	wndclass.style = CS_HREDRAW | CS_VREDRAW;
	wndclass.lpfnWndProc = WndProc;
	wndclass.cbClsExtra = 0;
	wndclass.cbWndExtra = 0;
	wndclass.hInstance = hInstance;
	wndclass.hCursor = LoadCursor(NULL, IDC_ARROW);
	wndclass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	wndclass.hbrBackground = CreateSolidBrush(RGB(252, 255, 0)); //(HBRUSH)GetStockObject(WHITE_BRUSH);
	wndclass.lpszMenuName = NULL;
	wndclass.hIconSm = LoadIcon(NULL, IDI_APPLICATION);

	if (!RegisterClassEx(&wndclass))
	{
		return false;
	}

	


HWND hWnd = CreateWindowEx
(
	WS_EX_TOPMOST,
	szClassName,
	L"MyClass",
	WS_OVERLAPPEDWINDOW,
	100, 100, 500, 500,
	NULL,
	NULL,
	hInstance,
	NULL
);
	
if (!hWnd) { return false; }
ShowWindow(hWnd, 1);
UpdateWindow(hWnd);


int rez = MessageBoxW(NULL, L"Hello!", L"MessageBox", MB_OK | MB_YESNO);

if(rez == IDOK)
	MessageBoxW(NULL, L"HellDFSHSHGSDGDGo!", L"MessaGDSDSGgeBox", MB_OK | MB_YESNO);
else
	MessageBoxW(NULL, L"Ho!", L"Mox", MB_OK | MB_YESNO);


MSG msg;
while (GetMessage(&msg, NULL, 0, 0))
{
	TranslateMessage(&msg);
	DispatchMessage(&msg);
	
}
return msg.wParam;


}



LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM IParam)
{
	HDC hdc;
	PAINTSTRUCT ps;
	RECT rect;

	
	switch (iMsg)
	{
	case WM_DESTROY:
	PostQuitMessage(0);
	break;

	default:
		return DefWindowProc(hwnd, iMsg, wParam, IParam);

	}
	return 0;
}
