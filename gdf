#include<windows.h>
#include"resource.h"
#include<string>
#define ID_EDIT 100
BOOL CALLBACK DlgProc(HWND, UINT, WPARAM, LPARAM);

HINSTANCE hInst;

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevlnstance, LPSTR lpCmdLine, int nCmdShow)
{
	hInst = hInstance;
	HWND hWnd = CreateDialog(hInstance, MAKEINTRESOURCE(IDD_DIALOG1), NULL, DlgProc);
	ShowWindow(hWnd, 1);

	MSG msg;
	while (GetMessage(&msg, 0, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return msg.wParam;
}

BOOL CALLBACK DlgProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam)
{
	wchar_t buf[20];
	static HWND hBUTOK, hEdit;
	static HWND hEd;
	switch (iMsg)
	{
	case WM_COMMAND:
	{
		if (LOWORD(wParam) == IDOK)
		{	
			GetWindowText(hBUTOK, buf,20);
			if (std::wstring(buf) ==  L"OK") 
				SetWindowText(hBUTOK, L"O_O");
			else if (std::wstring(buf) ==  L"O_O") 
				SetWindowText(hBUTOK, L"$_$");
			else if (std::wstring(buf)== L"$_$")
				SetWindowText(hBUTOK, L"O_O");
		}

	}break;
	
	case WM_RBUTTONDOWN:
	{
		SendMessage(hEdit, WM_CUT, 0, 0);
	}break;

	case WM_LBUTTONDOWN:
	{
		SendMessage(hEd, WM_PASTE, 0, 0);
	}break;
		

	


	case WM_INITDIALOG:
	{
		hBUTOK = GetDlgItem(hwnd,IDOK);
		hEd = GetDlgItem(hwnd, IDC_EDIT1);
		hEdit = CreateWindowEx(NULL, L"EDIT", L"", WS_CHILD | WS_VISIBLE ,  20, 20, 300, 50, hwnd, (HMENU)ID_EDIT,hInst , NULL);
	}break;
		
		

	


	case WM_CLOSE:
		DestroyWindow(hwnd);
		PostQuitMessage(0);
	return true;
	}
	return false;
}
